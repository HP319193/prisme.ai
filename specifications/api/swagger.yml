openapi: "3.0.0"
info:
  version: 1.0.0
  title: Prisme.ai APIs
  description: Prisme.ai APIs specifications
  termsOfService: https://www.prisme.ai/mentions-legales
  contact:
    name: Prisme.ai Support Team
    email: support@prisme.ai
    url: https://www.prisme.ai
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:1337
  - url: https://api.prisme.ai
security:
  - ApiKeyAuth: []
    BearerAuth: []

paths:
  ############################################# gateway
  /v2/login:
    post:
      description: Username / Password authentication
      operationId: credentialsAuth
      tags:
        - API Gateway
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string

      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

  /v2/login/anonymous:
    post:
      description: Anonymous authentication
      operationId: anonymousAuth
      tags:
        - API Gateway
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

  /v2/me:
    get:
      description: Retrieve current authenticated user
      operationId: getMyProfile
      tags:
        - API Gateway

      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"


  /v2/signup:
    post:
      description: Signup
      operationId: signup
      tags:
        - API Gateway
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - username
                - password
                - firstName
                - lastName
              properties:
                username:
                  type: string
                password:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string

      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

  ############################################# prisme.ai-events
  /v2/workspaces/{workspaceId}/events:
    get:
      description: Retrieve events filtered with any JSON path specified in GET parameters
      operationId: eventsLongpolling
      tags:
        - "Prisme.ai Events"
      parameters:
        - name: "workspaceId"
          in: "path"
          description: "ID of workspace to listen to"
          required: true
          schema:
            type: string
        - name: "somePayloadField.subField"
          in: "query"
          description: "Allows to filter on any field inside events payload"
          schema:
            type: string
        - name: "filter"
          in: "query"
          example: message,notification
          description: "Comma separated list of listened events "
          schema:
            type: string
        - name: "fromDate"
          in: "query"
          description: "Retrieve events created after this ISO8601 formatted date"
          schema:
            type: string
        - name: "longpolling"
          in: "query"
          example: 30
          description: "Optional longpolling timeout. No longpolling by default"
          required: false
          schema:
            type: number
        - name: "page"
          in: "query"
          description: "Page number"
          schema:
            type: number
        - name: "limit"
          in: "query"
          description: "Page size"
          required: false
          schema:
            type: number
      responses: &getEventsResponse
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      events:
                        $ref: "#/components/schemas/AllEventResponses"

        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "400":
          $ref: "#/components/responses/BadParameters"
    post:
      description: Emit a new event in this workspace
      operationId: sendConversationEvent
      tags:
        - "Prisme.ai Events"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - events
              properties:
                events:
                  $ref: "#/components/schemas/AllEventRequests"

      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllEventResponses"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

  /v2/workspaces/{workspaceId}/events/websocket:
    get:
      description: Retrieve events filtered with any JSON path specified in GET parameters
      operationId: eventsWebsocket
      tags:
        - "Prisme.ai Events"
      parameters:
        - name: "workspaceId"
          in: "path"
          description: "ID of workspace to listen to"
          required: true
          schema:
            type: string
        - name: "somePayloadField.subField"
          in: "query"
          description: "Allows to filter on any field inside events payload"
          schema:
            type: string
        - name: "filter"
          in: "query"
          example: message,notification
          description: "Comma separated list of listened events "
          schema:
            type: string
      responses: *getEventsResponse

  ############################################# runtime
  /v2/workspaces/{workspaceId}/webhooks/{automationId}:
    post:
      description: Trigger some workflow automation from HTTP. GET/POST/PUT/PATCH/DELETE methods can all be used
      operationId: automationWebhook
      tags:
        - "Prisme.ai Runtime"
      parameters:
        - name: "workspaceId"
          in: "path"
          description: "Workspace ID"
          required: true
          schema:
            type: string
        - name: "automationId"
          in: "path"
          description: "Automation ID we will trigger"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Entire body will be passed as a payload to the triggered workflow

      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

  ############################################# workspaces
  ## workspaces
  /v2/workspaces:
    post:
      description: Create a new workspace
      operationId: createWorkspace
      tags:
        - "Prisme.ai Workspaces"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Workspace"

      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

  /v2/workspaces/{workspaceId}:
    get:
      description: Fetch a workspace
      operationId: getWorkspace
      tags:
        - "Prisme.ai Workspaces"
      parameters:
        - name: "workspaceId"
          in: "path"
          description: "Workspace id"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Workspace"
                  - type: object
                    properties:
                      automations:
                        additionalProperties:
                          $ref: "#/components/schemas/Automation"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

    patch:
      description: Update a workspace
      operationId: updateWorkspace
      tags:
        - "Prisme.ai Workspaces"
      parameters:
        - name: "workspaceId"
          in: "path"
          description: "Workspace id"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Workspace"

      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

    delete:
      description: Delete a workspace
      operationId: deleteWorkspace
      tags:
        - "Prisme.ai Workspaces"
      parameters:
        - name: "workspaceId"
          in: "path"
          description: "Workspace id"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - objectId
                properties:
                  objectId:
                    type: string
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"


  ## automations
  /v2/workspaces/{workspaceId}/automations:
    post:
      description: Create a new automation
      operationId: createAutomation
      tags:
        - "Prisme.ai Workspaces"
      parameters:
        - name: "workspaceId"
          in: "path"
          description: "Workspace id"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Automation"

      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Automation"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

  /v2/workspaces/{workspaceId}/automations/{automationId}:
    get:
      description: Fetch an automation
      operationId: getAutomation
      tags:
        - "Prisme.ai Workspaces"
      parameters:
        - name: "workspaceId"
          in: "path"
          description: "Workspace id"
          required: true
          schema:
            type: string
        - name: "automationId"
          in: "path"
          description: "Automation id"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Automation"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

    patch:
      description: Update an automation
      operationId: updateAutomation
      tags:
        - "Prisme.ai Workspaces"
      parameters:
        - name: "workspaceId"
          in: "path"
          description: "Workspace id"
          required: true
          schema:
            type: string
        - name: "automationId"
          in: "path"
          description: "Automation id"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Automation"

      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Automation"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

    delete:
      description: Delete an automation
      operationId: deleteAutomation
      tags:
        - "Prisme.ai Workspaces"
      parameters:
        - name: "workspaceId"
          in: "path"
          description: "Workspace id"
          required: true
          schema:
            type: string
        - name: "automationId"
          in: "path"
          description: "Automation id"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - objectId
                properties:
                  objectId:
                    type: string
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

  ## apps
  /v2/workspaces/{workspaceId}/apps:
    post:
      description: Install a new app
      operationId: installApp
      tags:
        - "Prisme.ai Workspaces"
      parameters:
        - name: "workspaceId"
          in: "path"
          description: "Workspace id"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppInstance"

      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppInstance"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

  /v2/workspaces/{workspaceId}/apps/{installedAppId}:
    get:
      description: Fetch an installed app
      operationId: getInstalledApp
      tags:
        - "Prisme.ai Workspaces"
      parameters:
        - name: "workspaceId"
          in: "path"
          description: "Workspace id"
          required: true
          schema:
            type: string
        - name: "installedAppId"
          in: "path"
          description: "Installed app id"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppInstance"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

    patch:
      description: Configure an app
      operationId: configureApp
      tags:
        - "Prisme.ai Workspaces"
      parameters:
        - name: "workspaceId"
          in: "path"
          description: "Workspace id"
          required: true
          schema:
            type: string
        - name: "installedAppId"
          in: "path"
          description: "Installed app id"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppInstance"

      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppInstance"
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

    delete:
      description: Uninstall an app
      operationId: uninstallApp
      tags:
        - "Prisme.ai Workspaces"
      parameters:
        - name: "workspaceId"
          in: "path"
          description: "Workspace id"
          required: true
          schema:
            type: string
        - name: "installedAppId"
          in: "path"
          description: "Installed app id"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - objectId
                properties:
                  objectId:
                    type: string
        "404":
          $ref: "#/components/responses/ObjectNotFound"
        "403":
          $ref: "#/components/responses/BadPermissions"
        "400":
          $ref: "#/components/responses/BadParameters"

  ## End of APIs

components:
  securitySchemes:
    BearerAuth:
      type: apiKey
      in: header
      name: X-Prismeai-Session-Token
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Prismeai-API-Key

  responses:
    "ObjectNotFound":
      description: Object not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ObjectNotFoundError"
    "BadParameters":
      description: "Bad parameters"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadParametersError"
    "BadPermissions":
      description: "Bad parameters"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadPermissionsError"

  schemas:
    Object:
      type: object
      properties:
        createdAt:
          type: string
          description: Creation date (ISO8601)
        updatedAt:
          type: string
          description: Last update date (ISO8601)
        objectId:
          type: string
          description: Unique id

    Contact:
      allOf:
        - required:
            - role
            - firstName
          type: object
          properties:
            firstName:
              type: string
              description: Name
            lastName:
              type: string
              description: Name
            photo:
              type: string
              description: Profile picture URL

        - $ref: "#/components/schemas/Object"

    User:
      allOf:
        - type: object
          properties:
            email:
              type: string
              example: foo@prisme.ai
            authData:
              type: object
              properties:
                provider:
                  type: string
                  enum:
                    - credentials
                    - anonymous
        - $ref: "#/components/schemas/Contact"


    Workspace:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        objectId:
          type: string
        constants:
          type: object

    Automation:
      type: object
      required:
        - name
        - objectId
      description: Full description at (TODO swagger url)
      properties:
        name:
          type: string
        objectId:
          type: string

    AppInstance:
      type: object
      required:
        - appName
        - appId
        - name
        - config
      properties:
        appName:
          type: string
        appId:
          type: string
        name:
          type: string
        objectId:
          type: string
        config:
          type: object


    ############################################################ Events ############################################################
    BaseEventResponse:
      type: object
      properties:
        createdAt:
          type: string
          description: Creation date (ISO8601)
        source:
          type: object
          properties:
            app:
              type: string
              enum:
                - prisme.ai-nlu
                - prisme.ai-dsul-server
                - prisme.ai-analytics
                - prisme.ai-actions
                - any existing app name
            user:
              description: Authenticated user
              type: object
              properties:
                objectId:
                  type: string
            workspace:
              description: Related workspace
              type: object
              properties:
                objectId:
                  type: string
            host:
              type: object
              properties:
                ip:
                  type: string
            correlationId:
              type: string
        target:
          type: object
          properties:
            user:
              description: Authenticated user
              type: object
              properties:
                objectId:
                  type: string
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            level:
              type: string
              enum:
                - warning
                - error
                - fatal
              example: warning
        objectId:
          type: string

    AllEventRequests:
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/GenericErrorEvent"
          - $ref: "#/components/schemas/FailedLogin"
          - $ref: "#/components/schemas/SucceededLogin"
          - $ref: "#/components/schemas/TriggeredWorkflow"
          - $ref: "#/components/schemas/UpdatedContexts"
          - $ref: "#/components/schemas/CreatedWorkspace"
          - $ref: "#/components/schemas/UpdatedWorkspace"
          - $ref: "#/components/schemas/DeletedWorkspace"
          - $ref: "#/components/schemas/InstalledApp"
          - $ref: "#/components/schemas/ConfiguredApp"
          - $ref: "#/components/schemas/CreatedAutomation"
          - $ref: "#/components/schemas/UpdatedAutomation"
          - $ref: "#/components/schemas/DeletedAutomation"

    AllEventResponses:
      type: array
      items:
        anyOf:
          - allOf:
              - $ref: "#/components/schemas/BaseEventResponse"
              - $ref: "#/components/schemas/GenericErrorEvent"
          - allOf:
              - $ref: "#/components/schemas/BaseEventResponse"
              - $ref: "#/components/schemas/FailedLogin"
          - allOf:
              - $ref: "#/components/schemas/BaseEventResponse"
              - $ref: "#/components/schemas/SucceededLogin"
          - allOf:
              - $ref: "#/components/schemas/BaseEventResponse"
              - $ref: "#/components/schemas/TriggeredWorkflow"
          - allOf:
              - $ref: "#/components/schemas/BaseEventResponse"
              - $ref: "#/components/schemas/UpdatedContexts"
          - allOf:
              - $ref: "#/components/schemas/BaseEventResponse"
              - $ref: "#/components/schemas/CreatedWorkspace"
          - allOf:
              - $ref: "#/components/schemas/BaseEventResponse"
              - $ref: "#/components/schemas/UpdatedWorkspace"
          - allOf:
              - $ref: "#/components/schemas/BaseEventResponse"
              - $ref: "#/components/schemas/DeletedWorkspace"
          - allOf:
              - $ref: "#/components/schemas/BaseEventResponse"
              - $ref: "#/components/schemas/InstalledApp"
          - allOf:
              - $ref: "#/components/schemas/BaseEventResponse"
              - $ref: "#/components/schemas/ConfiguredApp"
          - allOf:
              - $ref: "#/components/schemas/BaseEventResponse"
              - $ref: "#/components/schemas/CreatedAutomation"
          - allOf:
              - $ref: "#/components/schemas/BaseEventResponse"
              - $ref: "#/components/schemas/UpdatedAutomation"
          - allOf:
              - $ref: "#/components/schemas/BaseEventResponse"
              - $ref: "#/components/schemas/DeletedAutomation"

    GenericErrorEvent:
      type: object
      properties:
        type:
          type: string
          example:
            error

    ########################## API Gateway ##########################
    FailedLogin:
      type: object
      properties:
        type:
          type: string
          example: gateway.login.failed
          enum:
            - gateway.login.failed
        payload:
          type: object
          properties:
            ip:
              type: string
            attempt:
              type: number

    SucceededLogin:
      type: object
      properties:
        type:
          type: string
          example: gateway.login.succeeded
          enum:
            - gateway.login.succeeded
        payload:
          type: object
          properties:
            ip:
              type: string
            attempt:
              type: number

    ########################## Workspaces events ##########################
    CreatedWorkspace:
      type: object
      properties:
        type:
          type: string
          example: workspaces.created
          enum:
            - workspaces.created
        payload:
          type: object
          properties:
            workspace:
              $ref: "#/components/schemas/Workspace"

    DeletedWorkspace:
      type: object
      properties:
        type:
          type: string
          example: workspaces.deleted
          enum:
            - workspaces.deleted
        payload:
          type: object
          properties:
            workspace:
              $ref: "#/components/schemas/Workspace"

    UpdatedWorkspace:
      type: object
      properties:
        type:
          type: string
          example: workspaces.updated
          enum:
            - workspaces.updated
        payload:
          type: object
          properties:
            workspace:
              $ref: "#/components/schemas/Workspace"

    InstalledApp:
      type: object
      properties:
        type:
          type: string
          example: workspaces.app.installed
          enum:
            - workspaces.app.installed
        payload:
          type: object
          properties:
            app:
              $ref: "#/components/schemas/AppInstance"

    ConfiguredApp:
      type: object
      properties:
        type:
          type: string
          example: workspaces.app.configured
          enum:
            - workspaces.app.configured
        payload:
          type: object
          properties:
            app:
              $ref: "#/components/schemas/AppInstance"

    CreatedAutomation:
      type: object
      properties:
        type:
          type: string
          example: workspaces.automation.created
          enum:
            - workspaces.automation.created
        payload:
          type: object
          properties:
            automation:
              $ref: "#/components/schemas/Automation"

    UpdatedAutomation:
      type: object
      properties:
        type:
          type: string
          example: workspaces.automation.updated
          enum:
            - workspaces.automation.updated
        payload:
          type: object
          properties:
            automation:
              $ref: "#/components/schemas/Automation"


    DeletedAutomation:
      type: object
      properties:
        type:
          type: string
          example: workspaces.automation.deleted
          enum:
            - workspaces.automation.deleted
        payload:
          type: object
          properties:
            automation:
              type: object
              required:
                - objectId
                - name
              properties:
                objectId:
                  type: string
                name:
                  type: string


    ########################## Runtime events ##########################

    TriggeredWorkflow:
      type: object
      properties:
        type:
          type: string
          example: runtime.workflow.triggered
          enum:
            - runtime.workflow.triggered
        payload:
          type: object
          properties:
            event:
              type: object
              properties:
                objectId:
                  type: string
                type:
                  type: string
            workflow:
              type: string
            payload:
              type: object


    UpdatedContexts:
      type: object
      properties:
        type:
          type: string
          example: runtime.contexts.updated
          enum:
            - runtime.contexts.updated
        payload:
          type: object
          properties:
            contexts:
              type: object





    ObjectNotFoundError:
      type: object
      properties:
        error:
          type: string
          example: ObjectNotFound
        message:
          type: string

    BadParametersError:
      type: object
      properties:
        error:
          type: string
          example: BadParameters
        message:
          type: string
        details:
          type: array
          items:
            type: object

    BadPermissionsError:
      type: object
      properties:
        error:
          type: string
          example: BadPermissions
        message:
          type: string
          example: Insufficient permissions
