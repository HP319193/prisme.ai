{
  "page_title": "{{elementName}} · Prisme.ai",
  "workspaces": {
    "title": "Workspaces — $t(common:main.title)",
    "description": "Create new Workspaces and new Apps, edit them, and run them",
    "sectionTitle": "Your workspaces gallery",
    "defaultDescription": "Created by you"
  },
  "workspace": {
    "title": "\"{{name}}\" Workspace — $t(common:main.title)",
    "description": "Editing Workspace \"{{name}}\"",
    "share": "Share this workspace",
    "empty": "<button>Create your first automation</button>",
    "dirtyWarning": "Your current work haven't been saved. Quit anyway ?",
    "dirtyOk": "Quit",
    "delete": {
      "label": "Delete Workspace",
      "confirm": {
        "title": "Do you want to delete the \"{{name}}\" workspace?",
        "content": "Warning, the data will be lost.",
        "ok": "Yes, delete",
        "cancel": "No, please no"
      },
      "toast": "Workspace has been deleted"
    },
    "expandSidebar": "Expand",
    "collapseSidebar": "Collapse",
    "details": {
      "name": {
        "label": "Workspace name"
      },
      "description": {
        "label": "Description"
      },
      "photo": {
        "label": "Photo"
      }
    },
    "sections": {
      "activity": "Activity",
      "automations": "Automations",
      "pages": "Pages",
      "apps": "Apps"
    }
  },
  "create": {
    "description_first": "Create your first workspace to start automating your work",
    "description": "New workspace",
    "label": "Create a workspace",
    "defaultName": "Workspace"
  },
  "edit": {
    "label": "Edit"
  },
  "events": {
    "filters": {
      "title": "Filters",
      "correlationId": "Correlation ID",
      "submit": "Apply filters",
      "text": "Keyword search",
      "afterDate": "From",
      "beforeDate": "Until",
      "query": {
        "label": "Filter specific fields",
        "description": "An object specifying the expected value for each field, eg: {\n  \"source.workspaceId\": \"Wl4RRUN\",\n}",
        "field": "Field",
        "value": "Value"
      },
      "empty": "No results were found using your filters. Try another search ?"
    },
    "empty": "Nothing has happened here yet…",
    "details": {
      "name": "Field",
      "value": "Value"
    },
    "more": "Load older events"
  },
  "automations": {
    "link": "Automations",
    "create": {
      "label": "Add an Automation",
      "defaultName": "Automation",
      "value": {
        "event": "an event"
      }
    },
    "empty": "An automation describes what to do and when to do it",
    "back": "Back",
    "design": {
      "title": "Design"
    },
    "manifest": {
      "title": "Manifest"
    },
    "save": {
      "label": "Save",
      "toast": "Automation has been saved",
      "error_slug": "Slug is already in use, please choose another one",
      "error": "Unknown error has occured"
    },
    "endpoint": {
      "copied": "Endpoint has been copied"
    },
    "trigger": {
      "events": {
        "title": "Events",
        "item": "Event",
        "add": "Add an event",
        "display_one": "The event {{events}} occurs",
        "display_other": "One of the events {{events}} occurs",
        "help": "Automation will be run everytime one of this event will be fired."
      },
      "dates": {
        "title": "Dates",
        "_help": "Automation will be run at every specified date interval.",
        "help": "Soon available"
      },
      "endpoint": {
        "title": "URL",
        "display": "<a>The URL <icon /></a> is hit",
        "copied": "URL has been copied in your clipboard",
        "help": "Automation will be run everytime the URL will be hit.",
        "custom": "Accessible by URL",
        "url": "Custom URL"
      },
      "save": "Save"
    },
    "instruction": {
      "title_builtin": "Logical",
      "label": "{{context}}",
      "label_emit": "Emit event",
      "label_repeat": "Repeat on",
      "label_repeat_until": "Repeat {{count}} time",
      "label_repeat_until_other": "Repeat {{count}} times",
      "label_all": "All instructions",
      "label_wait": "Wait",
      "label_set": "Set var",
      "label_delete": "Delete var",
      "label_conditions": "Conditions",
      "label_conditions_default": "Else",
      "label_conditions_add": "Add condition",
      "label_fetch": "HTTP Request",
      "label_break": "Break",
      "label_comment": "Comment",
      "description": "{{default}}",
      "description_emit": "Issue an event of your choice to which you can associate a data object. If you choose to make this event private, it will not be heard by other workspaces and Apps.",
      "description_repeat": "Repeats a list of instructions on each element of a data array passed in parameter (`on`) or up to a certain number of iterations (`until`).",
      "description_all": "Executes all the instructions of the group in parallel. The following instructions will be executed only after all the instructions of this group are finished.",
      "description_wait": "Blocks the processing of the instruction list until the event passed in parameter is triggered.",
      "description_set": "Sets a value in a variable.",
      "description_delete": "Delete a variable.",
      "description_conditions": "Test conditions in order to execute this or that group of instructions.",
      "description_fetch": "Send an HTTP request.",
      "description_break": "Stop current automation execution.",
      "search": "Search",
      "anyFieldError": "Invalid JSON",
      "anyFieldErrorTooltip": "This is just a warning, the instruction will still save",
      "item": {
        "add": "Add an item",
        "remove": "Delete item"
      },
      "form": {
        "addItem": "Add an item",
        "removeItem": "Remove item",
        "addProperty": "Add a property",
        "removeProperty": "Remove property",
        "propertyKey": "Property",
        "propertyValue": "Value",
        "uploadLabel": "Choose a file",
        "uploadRemove": "Remove file",
        "emit": {
          "event": {
            "label": "Event name",
            "description": "Enter the name of the event you want to trigger."
          },
          "payload": {
            "label": "Payload (optional, JSON format)",
            "description": "You can attach any type of data to your event."
          }
        },
        "wait": {
          "oneOf": {
            "label": "One of these events:",
            "description": "The automation can wait until a particular event is triggered.",
            "items": {
              "label": "Event",
              "event": {
                "label": "Event name",
                "description": "Indicate the name of the event that will restart your automation."
              },
              "filters": {
                "label": "Filters",
                "description": "Filter the event according to the values of the properties that accompany it."
              },
              "cancelTriggers": {
                "label": "Cancel trigger",
                "description": "By checking this option, the event will be cancelled and will not trigger any other automation."
              }
            }
          },
          "timeout": {
            "label": "Timeout in seconds",
            "description": "Time in seconds to wait before resuming the execution of the automation."
          },
          "output": {
            "label": "Output variable name",
            "description": "Indicate the name of a variable in which the data accompanying the event that unlocked this step will be stored."
          }
        },
        "set": {
          "name": {
            "label": "Variable name",
            "description": "Indicate the name of the variable in which your data will be stored. You can then access it using the interpolation syntax. For example, a variable named `foo` will be accessible elsewhere using `{{foo}}`."
          },
          "value": {
            "label": "Value",
            "description": "Put any value of any type here. You can also use interpolation to store data from another variable."
          }
        },
        "delete": {
          "name": {
            "label": "Variable name",
            "description": "Enter the name of the variable you want to delete. Its value will no longer be accessible."
          }
        },
        "break": {
          "scope": {
            "label": "Scope",
            "description": "Scope of the stop. By default, only this automation will be stopped. If you choose \"$t(automations.instruction.form.break.scope.enum.all)\", the parent automations that called this one will also be stopped.",
            "enum": {
              "all": "All",
              "automation": "This automation"
            }
          }
        },
        "fetch": {
          "url": {
            "label": "HTTP address",
            "description": "URL of a publicly accessible web service."
          },
          "method": {
            "label": "HTTP method",
            "enum": {
              "get": "GET",
              "post": "POST",
              "put": "PUT",
              "patch": "PATCH",
              "delete": "DELETE"
            },
            "description": "HTTP method to use for the request."
          },
          "headers": {
            "label": "Headers",
            "description": "List of key values constituting the headers of the query."
          },
          "body": {
            "label": "Body",
            "description": "The body accompanying the request. Can be of any type."
          },
          "output": {
            "label": "Output variable name",
            "description": "Save the answer of the query in a variable accessible in the rest of your automation thanks to the interpolation."
          }
        },
        "repeat": {
          "on": {
            "label": "On an array's items",
            "description": "Name of the array variable to loop on."
          },
          "until": {
            "label": "Until",
            "description": "Loop a specific number of times"
          }
        }
      }
    },
    "output": {
      "label": "<pre><code>{{output}}</code></pre>",
      "edit": {
        "title": "Return value:",
        "description": "Value returned by the automation. Can be a static value in the form of a string or a JSON object or even a variable generated during the execution of your automation surrounded by braces (ex: {{maVar}})",
        "label": "Value",
        "save": "Add"
      },
      "description": "Indicate the name of a variable in which to store the output of this instruction in order to exploit it in the continuation of the automation"
    },
    "node": {
      "title": "",
      "title_trigger": "Triggered when",
      "title_output": "Output",
      "label": "{{instruction}} {{value}}"
    },
    "edit": {
      "select": "Select instruction",
      "builtin": "Logical",
      "save": "Add"
    },
    "condition": {
      "edit": {
        "title": "Condition",
        "description": "Condition to choose this path",
        "save": "Add",
        "submit_new": "Add"
      }
    },
    "details": {
      "slug": {
        "label": "Slug"
      },
      "name": {
        "label": "Automation title"
      },
      "description": {
        "label": "Description"
      },
      "private": {
        "label": "Internal use",
        "description": "If you enable this setting, Automation will be visible as an instruction only in this same Workspace. When you publish your app, its users will not see it."
      },
      "disabled": {
        "label": "Disabled",
        "description": "If you enable this setting, Automation will not be executed anymore and simply ignored"
      }
    },
    "arguments": {
      "title": "Arguments",
      "description": "Specification of the parameters that can be passed to your automation when it is used as a statement of another automation. A form will be generated according to the structure you specify here."
    }
  },
  "apps": {
    "link": "Apps",
    "empty": "All is App",
    "install": "Add an App",
    "uninstall": "Are you sure you want to remove {{appName}} from your workspace ?",
    "uninstallConfirm": "Uninstall {{appName}}",
    "uninstallTooltip": "Uninstall",
    "configTooltip": "Configuration",
    "search": "Search for an app...",
    "title": "App Store",
    "saveSuccess": "App config saved successfully",
    "details": {
      "appName": {
        "label": "App Name"
      },
      "slug": {
        "label": "Technical name"
      },
      "disabled": {
        "label": "Disabled",
        "description": "A disabled app will never be executed but simply ignored"
      }
    },
    "publish": {
      "menuLabel": "Publish as an app",
      "confirm": {
        "alreadyPublished": "The workspace is already published as an app with this name, which can't be changed",
        "slugInput": "App name",
        "slugInvalid": "Only allowed characters are letters, numbers, whitespaces, . _ and -",
        "title": "Publish the workspace as an app",
        "ok": "Publish",
        "toast": "App Published",
        "content": "Automations, Pages, Blocks as well as Workspace configuration will be accessible to anyone installing your App.\nFirst, remove any private API key you want to keep private."
      }
    }
  },
  "pages": {
    "private": "Private",
    "public": "Public",
    "link": "Pages",
    "create": {
      "label": "Add a Page",
      "defaultName": "Page"
    },
    "empty": "Interfaces according to needs and roles",
    "delete": {
      "label": "Delete the page",
      "confirm": {
        "title": "Do you want to delete the page \"{{name}}\"?",
        "content": "Warning, the data will be lost.",
        "ok": "Yes, delete",
        "cancel": "No, please no"
      },
      "toast": "Page has been deleted"
    },
    "save": {
      "label": "Save",
      "toast": "Page has been saved",
      "error_slug": "Slug is already in use, please choose another one",
      "error": "Unknown error has occured"
    },
    "preview": {
      "label": "Preview",
      "label_hide": "Hide preview"
    },
    "share": {
      "label": "Share this page",
      "access": "Access",
      "access_private": "Users",
      "copy": "Copy the public address of the page",
      "copied": "The address is copied into your clipboard",
      "notme": "You are already the owner of this Page."
    },
    "details": {
      "name": {
        "label": "Page title"
      },
      "description": {
        "label": "Description"
      },
      "slug": {
        "label": "Slug"
      },
      "styles": {
        "label": "CSS styles of the page",
        "description": "You can edit the style sheet of your web page to customize it. Don't hesitate to add identifiers to your blocks to be able to target them with the # prefix in your CSS.",
        "reset": {
          "label": "Reset",
          "description": "Revert to the default theme. ⚠️ You will lose your changes."
        }
      }
    },
    "blocks": {
      "add": "Add a block",
      "edit": "Edit",
      "remove": "Remove the block",
      "search": "Search a block",
      "settings": {
        "blockTitle": {
          "label": "Title",
          "description": "Title shown above the block"
        },
        "generic": "Dynamic values",
        "schema": "Configuration",
        "title": "Block settings",
        "toggle_on": "Display settings",
        "toggle_off": "Hide settings",
        "onInit": {
          "label": "Initial event",
          "description": "This event will be triggered during the initialization of the block each time the page is viewed."
        },
        "updateOn": {
          "label": "Update event",
          "description": "When one of your automations emits this event, the content of the block will be updated with the content of the payload."
        },
        "automation": {
          "label": "Automation",
          "description": "Run an automation at page load to retrieve the block configuration."
        },
        "sectionId": {
          "label": "HTML identifier of the section",
          "description": "Allows you to identify the section to apply particular CSS styles or point a link to it like an automatic scroll. Optional."
        }
      },
      "builtin": "Built-in Blocks",
      "name": "{{context}}",
      "name_Header": "Header",
      "name_Cards": "Cards group",
      "name_DataTable": "Data table",
      "name_Form": "Form",
      "name_Development": "Development",
      "description": "",
      "description_Header": "Page header",
      "description_Cards": "Display a cards group",
      "description_DataTable": "Display a data table",
      "description_Form": "Display form",
      "description_Development": "Allows you to develop your own Block. Intended for developers.",
      "header": {
        "settings": {
          "title": {
            "label": "Title",
            "description": "Title of your page."
          },
          "logo": {
            "label": "Logo",
            "description": "Image displayed next to the title. Optional.",
            "src": {
              "label": "Image",
              "description": "Choose an image"
            },
            "alt": {
              "label": "Alternative text",
              "description": "Text displayed in place of the image for non-graphical browsers."
            }
          },
          "nav": {
            "label": "Navigation",
            "description": "You can add links to web addresses or buttons sending events.",
            "items": {
              "label": "Buttons",
              "external": {
                "label": "External page",
                "value": {
                  "label": "Web address",
                  "description": "Indicate the web address of the page (https://...)."
                }
              },
              "internal": {
                "label": "Workspace's page",
                "value": {
                  "label": "Page",
                  "description": "Choose a page in your Workspace."
                }
              },
              "inside": {
                "label": "Scroll to a section",
                "value": {
                  "label": "Block ID",
                  "description": "Choose one of the blocks on your page to scroll to."
                }
              },
              "event": {
                "label": "Trigger an event",
                "value": {
                  "label": "Event",
                  "description": "Specify the name of the event to be triggered."
                }
              },
              "text": {
                "label": "Button text",
                "description": "Text displayed in the navigation button."
              }
            }
          }
        }
      },
      "cards": {
        "settings": {
          "title": "Title",
          "description": "Description",
          "cover": "Cover image",
          "variant": {
            "label": "Cards style"
          },
          "classic": {
            "label": "Classic",
            "content": {
              "label": "Content",
              "item": "Line",
              "add": "Add a line",
              "remove": "Remove line",
              "type": "Type",
              "type_text": "Text",
              "type_button": "Button",
              "type_accordion": "Accorieon",
              "text": {
                "value": "Text",
                "value_description": "You can use HTML or Markdown."
              },
              "button": {
                "value": "Label",
                "value_description": "Button label.",
                "url": "Web address",
                "url_description": "The button can be a link to a web page.",
                "popup": "Open the link in a new tab",
                "popup_description": "The link will open in a new tab.",
                "event": "Event",
                "event_description": "The button can trigger an event.",
                "payload": "Payload",
                "payload_description": "Data accompanying the event.",
                "icon": "Icon"
              },
              "accordion": {
                "title": "Title",
                "title_description": "Always displayed text.",
                "content": "Content",
                "content_description": "Hidden content. Can be HTML or markdown.",
                "icon": "Icon"
              }
            }
          },
          "short": {
            "label": "Short",
            "subtitle": "Subtitle",
            "backgroundColor": "Background color",
            "backgroundColor_black": "Black",
            "backgroundColor_white": "White",
            "backgroundColor_transparent-white": "Transparent white",
            "backgroundColor_transparent-black": "Transparent black"
          },
          "article": {
            "label": "Article",
            "subtitle": "Subtitle",
            "tag": "Tag"
          },
          "square": {
            "label": "Square"
          },
          "actions": {
            "label": "Actions",
            "content": {
              "label": "Buttons",
              "add": "Add a button",
              "remove": "Remove button",
              "item": "Button",
              "type": "Type",
              "type_event": "Event",
              "text": "Text",
              "value_event": "Event name",
              "payload": "Payload",
              "type_url": "Web address",
              "value_url": "Web address"
            }
          },
          "cards": "Cards",
          "cards_add": "Add a card",
          "cards_remove": "Remove card",
          "card": "Card",
          "layout": {
            "title": "Layout",
            "description": "You can change the display mode. By default, cards will be displayed using a carousel.",
            "style": "Style",
            "carousel": "Carousel",
            "grid": "Grid",
            "column": "Column",
            "autoScroll": {
              "title": "Auto scroll",
              "description": "Activate this option to have the carousel scroll automatically every 5 seconds"
            }
          }
        }
      },
      "datatable": {
        "settings": {
          "data": {
            "label": "Table of data to be displayed",
            "description": "This block waits for an array of objects whose structure is at your convenience but identical for each element of the array.",
            "items": {
              "label": "Line",
              "description": "The keys of the object will be the columns of the table."
            }
          },
          "columns": {
            "label": "Columns",
            "description": "Specifying the columns. If you don't change anything, all your data will be displayed as raw.",
            "items": {
              "label": "Column",
              "description": "Specification of the column",
              "add": "Add a column",
              "remove": "Delete the column",
              "_label": {
                "label": "Title",
                "description": "Column title"
              },
              "key": {
                "label": "Key",
                "description": "The key corresponding to the data to be displayed"
              },
              "type": {
                "label": "Type",
                "description": "The type of data format. By default, the data is displayed as text",
                "string": "Text",
                "number": "Number",
                "boolean": "Boolean",
                "date": "Date",
                "tags": "Tags"
              },
              "format": {
                "label": "Format",
                "description": "Format to apply to the data in case of number or date type."
              },
              "actions": {
                "label": "Actions",
                "description": "You can display action buttons if you have not chosen a key",
                "items": {
                  "label": "Action",
                  "description": "Specification of the action",
                  "add": "Add an action",
                  "remove": "Delete action",
                  "_label": {
                    "label": "Label",
                    "description": "Button text"
                  },
                  "event": {
                    "label": "Event",
                    "description": "A click on the button will send an event"
                  },
                  "payload": {
                    "label": "Payload",
                    "description": "The event can be sent with data"
                  },
                  "url": {
                    "label": "URL",
                    "description": "A click on the button will open a new page. The URL can contain parameters in the form {{key}}. For example, if data contains a \"_id\" property, the URL can be \"http://host/user/{{_id}}\" and will be filled with the value of the concerned line"
                  }
                }
              },

              "onEdit": {
                "label": "Event on edition",
                "description": "Makes the cell editable. The event passed in value will be sent each time it is modified"
              }
            }
          }
        }
      },
      "form": {
        "submitLabel": {
          "label": "Submit button text"
        },
        "hideSubmit": {
          "label": "Hide submit button"
        },
        "onSubmit": {
          "label": "On submit event",
          "description": "When the form is validated, the event will be sent with all its values."
        },
        "onChange": {
          "label": "On change event",
          "description": "Each time the form is modified, the event will be sent with all its values."
        },
        "schema": {
          "label": "Form specification",
          "description": "Use the form builder interface to add the fields of your choice.",
          "add": "Add a control"
        }
      },
      "development": {
        "error": "Unknown error",
        "error_url": "Please choose a valid javascript module url",
        "error_loading": "Unable to load your Block. Please check that your development environment is running and that you have copied the correct URL.",
        "settings": {
          "url": {
            "label": "URL of the Block",
            "description": "Issue the command `npm start`. A URL will be displayed. Paste it into this field to load your Block into the console."
          },
          "block": {
            "label": "Block configuration",
            "description": "The configuration of your Block. If nothing is displayed, add a static property `schema` to your React component."
          }
        }
      },
      "richtext": {
        "settings": {
          "content": {
            "label": "Content in HTML or Markdown format",
            "description": "Here you can display any rich content using HTML or Markdown. You can even mix the two."
          }
        }
      }
    }
  },
  "expert": {
    "show": "Edit the source code",
    "hide": "Hide the source code",
    "exit": {
      "confirm_title": "Changes in progress",
      "confirm_message": "You are about to leave without saving. Are you sure?",
      "cancel": "Wait",
      "confirm": "Leave !"
    },
    "save": {
      "help": "Save",
      "confirm": "Your workspace is saved",
      "fail": "Your workspace is invalid and could not be saved."
    }
  },
  "404": "This workspace does not exist. Return to your home page.",
  "whatsNew": "What's new",
  "help": "Help?",
  "share": {
    "label": "Share",
    "email": "Email",
    "role": "Role",
    "access": "Access",
    "actions": "Actions",
    "delete": "Remove access",
    "roles": {
      "owner": "Owner",
      "editor": "Editor"
    },
    "leave": "You no longer have access to the {{name}} Workspace.",
    "notme": "You are already the owner of this Workspace."
  },
  "languages": {
    "add": {
      "tooltip": "Add {{lang}}"
    },
    "available": {
      "title": "Available languages"
    },
    "delete": {
      "tooltip": "Delete this language"
    },
    "set": {
      "tooltip": "Add a translation",
      "title": "Added languages"
    }
  },
  "details": {
    "title": "",
    "title_workspaces": "Workspace settings",
    "title_automations": "Automation settings",
    "title_pages": "Block settings",
    "title_apps": "App settings",
    "save": "Save",
    "delete": {
      "label": "Delete",
      "label_workspaces": "Delete Workspace",
      "label_automations": "Delete automation",
      "label_pages": "Delete page",
      "confirm": {
        "title": "Do you want to delete \"{{name}}\" ?",
        "title_workspaces": "Do you want to delete the \"{{name}}\" Workspace?",
        "title_automation": "Do you want to delete the \"{{name}}\" automation?",
        "title_pages": "Do you want to delete the \"{{name}}\" page?",
        "content": "Warning, the data will be lost.",
        "ok": "Yes, delete",
        "cancel": "No, please no"
      },
      "toast_automations": "Automation has been deleted",
      "toast_pages": "Page has been deleted"
    }
  },
  "schema": {
    "property": {
      "edit": "Edit",
      "add": "Add a property",
      "delete": "Delete the property",
      "name": "Property name:",
      "details": "Details",
      "items": "Array items",
      "required": "Required",
      "title": "Field label",
      "description": {
        "label": "Field description",
        "description": "This text will be displayed in a bubble exactly like this one."
      },
      "type": {
        "label": "Type of value",
        "description": "The value will be of the type you specify"
      },
      "widget": {
        "label": "Display mode",
        "description": "Each type offers a particular display, but some offer alternatives. For example, you can force the choice of a date with the Date display."
      },
      "enum": {
        "label": "List of specific values",
        "description": "You can impose a value from a specific selection. A drop-down menu will then be displayed to the user.",
        "add": "Add a value",
        "remove": "Delete this value"
      }
    },
    "types": {
      "string": "Text",
      "localized_string": "Localized text",
      "boolean": "Boolean",
      "localized_boolean": "Localized boolean",
      "number": "Number",
      "localized_number": "Localized number",
      "object": "Object",
      "array": "Array",
      "any": "Any type"
    },
    "widget": {
      "default": "By default",
      "default_description": "A basic field related to the value type.",
      "name": "{{context}}",
      "name_upload": "Sending a file",
      "description_upload": "An upload area will be displayed. The file will be uploaded to our cloud and the url will be stored as a value in your data object.",
      "name_textarea": "Text area",
      "description_textarea": "A more comfortable writing area than a simple field.",
      "name_date": "Date",
      "description_date": "A calendar will be displayed. The value will be formatted as a date.",
      "name_enum": "Drop-down list",
      "description_enum": "You choose the list of possible values. Only one of these values will be allowed."
    }
  },
  "feed": {
    "filter": "Filters",
    "type": "The <event>{{context}}</event> event has been fired",
    "type_workspaces.created": "The Workspace was created",
    "type_workspaces.updated": "The Workspace has been updated",
    "type_workspaces.deleted": "The Workspace has been removed",
    "type_workspaces.configured": "The Workspace configuration has been updated",
    "type_workspaces.apps.installed": "The {{appSlug}} app has been installed as <app>{{appName}}</app>",
    "type_workspaces.apps.uninstalled": "The app {{appName}} has been uninstalled",
    "type_workspaces.apps.configured": "The app <app>{{appName}}</app> has been configured",
    "type_workspaces.automations.created": "The automation <automation>{{automation}}</automation> has been created",
    "type_workspaces.automations.updated": "The <automation>{{automation}}</automation> has been updated",
    "type_workspaces.automations.deleted": "The <automation>{{automation}}</automation> has been removed",
    "type_workspaces.pages.updated": "The <page>{{page}}</page> has been updated",
    "type_apps.published": "The app {{appName}} has been published",
    "type_runtime.automations.executed": "The <automation>{{automation}}</automation> has been executed",
    "type_runtime.webhooks.triggered": "The <automation>{{automation}}</automation> was triggered by URL",
    "type_runtime.waits.pending": "Automation <automation>{{automation}}</automation> is pending {{waits}}",
    "type_runtime.waits.pending_oneOf_one": "of the event <event>{{events}}</event>",
    "type_runtime.waits.pending_oneOf_other": "of events <event>{{events}}</event>",
    "type_runtime.waits.pending_timeout": "for {{timeout}}s",
    "type_runtime.waits.fulfilled": "The <automation>{{automation}}</automation> has resumed following the <event>{{event}}</event>",
    "type_runtime.fetch.failed": "HTTP request failed",
    "type_runtime.contexts.updated": "Updated context",
    "type_apikeys.updated": "An API key has been updated",
    "type_apikeys.created": "An API key has been created",
    "type_apikeys.deleted": "An API key has been deleted",
    "type_error": "<error>An error has occurred</error>"
  },
  "form": {
    "raw": "Insert a raw value (allows you to enter text, and therefore interpolated variables)",
    "raw_hide": "Respect the type of data required"
  }
}
