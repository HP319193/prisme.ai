image: node:16

cache:
  untracked: true
  key: "$CI_BUILD_REF_NAME"
  paths:
    - node_modules/

variables:
  DOCKER_DRIVER: overlay2
  GIT_DEPTH: "1"
  CONTAINER_BASE_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH

  CONSOLE_DIRECTORY: "console"
  CONSOLE_IMAGE_NAME: "prisme.ai-console"
  CONSOLE_K8S_NAME: "prismeai-console"

  WORKSPACES_DIRECTORY: "workspaces"
  WORKSPACES_IMAGE_NAME: "prisme.ai-workspaces"
  WORKSPACES_K8S_NAME: "prismeai-workspaces"

stages:
  - dependencies
  - test
  - build_docker
  - deploy

sast:
  stage: test
include:
  - template: Security/SAST.gitlab-ci.yml

npm_install:
  stage: dependencies
  script:
    - "npm ci"

#### Parent jobs

.npm_test:
  interruptible: true
  stage: test
  script:
    - npm test $SERVICE_NAME
  coverage: '/All files\s+\|\s+([\d\.]+)\s+\|\s+([\d\.]+)\s+\|\s+([\d\.]+)\s+\|\s+([\d\.]+)/'
  artifacts:
    paths:
      - coverage

.build_docker:
  interruptible: true # Stop this job if a new one has been triggered by the same branch
  stage: build_docker
  only:
    # - tags
    - main
    - master
  image: docker:stable
  services:
    - docker:stable-dind
  script:
    - cp -r ../../specifications/ . # Include current swagger file in docker image as it is required for HTTP request validations
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $IMAGE_NAME:latest || true
    - docker build --cache-from $IMAGE_NAME:latest -t $IMAGE_NAME:latest .
    # - docker push $IMAGE_NAME:$CI_COMMIT_TAG
    - docker push $IMAGE_NAME:latest

.deploy_k8s:
  stage: deploy
  only:
    # - tags
    - main
    - master
  cache: []
  tags:
    - internal-runner
  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: ["/bin/bash", "-c"]
  script:
    - kubectl -n core rollout restart deploy/${K8S_NAME}
    # - kubectl -n core set image deploy/${K8S_NAME} ${K8S_NAME}=$IMAGE_NAME:$CI_COMMIT_TAG --record
    - kubectl -n core rollout status deploy/${K8S_NAME}

## Console jobs
console_test:
  extends: .npm_test
  only:
    changes:
      - "services/console/*"
  before_script:
    - export SERVICE_NAME=$CONSOLE_DIRECTORY

console_build_docker:
  extends: .build_docker
  interruptible: true # Stop this job if a new one has been triggered by the same branch
  stage: build_docker
  image: docker:stable
  services:
    - docker:stable-dind
  only:
    refs:
      # - tags
      - main
      - master
    changes:
      - "services/console/*"
  before_script:
    - cd services/$CONSOLE_DIRECTORY
    - export DOCKER_HOST=tcp://docker:2375
    - export IMAGE_NAME=$CONTAINER_BASE_IMAGE/$CONSOLE_IMAGE_NAME

console_deploy:
  extends: .deploy_k8s
  only:
    refs:
      # - tags
      - main
      - master
    changes:
      - "services/console/*"
  before_script:
    - export KUBECONFIG=$KUBECONFIG
    - export IMAGE_NAME=$CONTAINER_BASE_IMAGE/$CONSOLE_IMAGE_NAME
    - export K8S_NAME=$CONSOLE_K8S_NAME


## Workspaces jobs
# workspaces_test:
#   extends: .npm_test
#   only:
#     changes:
#       - "services/workspaces/*"
#   before_script:
#     - export SERVICE_NAME=$WORKSPACES_DIRECTORY

workspaces_build_docker:
  extends: .build_docker
  interruptible: true # Stop this job if a new one has been triggered by the same branch
  stage: build_docker
  image: docker:stable
  services:
    - docker:stable-dind
  only:
    refs:
      # - tags
      - main
      - master
    changes:
      - "services/workspaces/*"
  before_script:
    - cd services/$WORKSPACES_DIRECTORY
    - export DOCKER_HOST=tcp://docker:2375
    - export IMAGE_NAME=$CONTAINER_BASE_IMAGE/$WORKSPACES_IMAGE_NAME

workspaces_deploy:
  extends: .deploy_k8s
  only:
    refs:
      # - tags
      - main
      - master
    changes:
      - "services/workspaces/*"
  before_script:
    - export KUBECONFIG=$KUBECONFIG
    - export IMAGE_NAME=$CONTAINER_BASE_IMAGE/$WORKSPACES_IMAGE_NAME
    - export K8S_NAME=$WORKSPACES_K8S_NAME
