image: node:16

cache:
  untracked: true
  key: "$CI_BUILD_REF_NAME"
  paths:
    - node_modules/

variables:
  CONTAINER_BASE_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
  CONSOLE_NAME: "console"
  CONSOLE_IMAGE_NAME: "prisme.ai-console"
  DOCKER_DRIVER: overlay2
  GIT_DEPTH: "1"

stages:
  - dependencies
  - test
  - build_docker
  - deploy

sast:
  stage: test
include:
  - template: Security/SAST.gitlab-ci.yml

npm_install:
  stage: dependencies
  script:
    - "npm ci"

#### Parent jobs

.npm_test:
  interruptible: true
  stage: test
  script:
    - npm test $SERVICE_NAME
  coverage: '/All files\s+\|\s+([\d\.]+)\s+\|\s+([\d\.]+)\s+\|\s+([\d\.]+)\s+\|\s+([\d\.]+)/'
  artifacts:
    paths:
      - coverage

.build_docker:
  interruptible: true # Stop this job if a new one has been triggered by the same branch
  stage: build_docker
  only:
    - tags
  image: docker:stable
  services:
    - docker:stable-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $IMAGE_NAME:latest || true
    - docker build --build-arg "USE_LOCAL_NODE_MODULES=yes" --cache-from $IMAGE_NAME:latest -t $IMAGE_NAME:$CI_COMMIT_TAG -t $IMAGE_NAME:latest .
    - docker push $IMAGE_NAME:$CI_COMMIT_TAG
    - docker push $IMAGE_NAME:latest

# .deploy_k8s:
#   stage: deploy
#   only:
#     - tags
#   tags:
#     - obs-gitlab-runner
#   image:
#     name: lachlanevenson/k8s-kubectl:latest
#     entrypoint: ["/bin/sh", "-c"]
#   before_script:
#     - export KUBECONFIG=$KUBECONFIG
#   script:
#     - kubectl -n orange set image deploy/ggwg-proximity-portal ggwg-proximity-portal=$CONTAINER_BASE_IMAGE/$CONSOLE_NAME:$CI_COMMIT_TAG
#     - kubectl -n orange rollout status deploy/ggwg-proximity-portal


## Console jobs
console_test:
  extends: .npm_test
  only:
    changes:
      - "services/console/*"
  before_script:
    - export SERVICE_NAME=$CONSOLE_NAME

console_build_docker:
  extends: .build_docker
  only:
    refs:
      - tags
    changes:
      - "services/console/*"
  before_script:
    - cp -r node_modules/ services/$CONSOLE_NAME
    - cd services/$CONSOLE_NAME
    - export DOCKER_HOST=tcp://docker:2375
    - export IMAGE_NAME=$CONTAINER_BASE_IMAGE/$CONSOLE_IMAGE_NAME

