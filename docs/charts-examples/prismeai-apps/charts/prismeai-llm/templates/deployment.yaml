apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "name" . }}
  labels:
    {{- include "labels" . | nindent 4 }}
  namespace: {{ .Values.namespace | default .Release.Namespace }}

spec:
  {{ if not .Values.hpa.create }}
  replicas: {{ .Values.replicaCount }}
  {{ end }}
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "100%"

  template:
    metadata:
      labels:
        {{- include "selectorLabels" . | nindent 8 }}
        version: {{ .Values.image.tag | default .Chart.AppVersion | quote }}
    spec:
      imagePullSecrets:
        - name: {{ include "imagePullSecretName" . }}
      restartPolicy: {{ .Values.image.pullPolicy }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}

      serviceAccountName: {{ include "serviceAccountName" . }}

      volumes:
        - name: models
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "name" .) }}

      containers:
        - name: {{ include "name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          # livenessProbe:
          #   httpGet:
          #     scheme: HTTP
          #     path: /sys/healthcheck
          #     port: http

          volumeMounts:
            - name: models
              mountPath: /models

          env:
            - name: THREADS
              value: '16'
#            - name: DEBUG
#              value: 'TRUE'
            - name: ADDRESS
              value: '0.0.0.0:5000'
            - name: MODELS_PATH
              value: '/models/models'

            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}


{{ if .Values.hpa.create }}

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "name" . }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "name" . }}
  minReplicas: {{ .Values.hpa.minReplicas }}
  maxReplicas:  {{ .Values.hpa.maxReplicas }}
  metrics:
    {{- toYaml .Values.hpa.metrics | nindent 4 }}

{{ end }}

{{ if .Values.autorestart.enabled }}

---

apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "name" . }}-autorestart
  namespace: apps
spec:
  schedule: {{ .Values.autorestart.schedule }}
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: autorestart-sa
          containers:
            - name: autorestart
              image: lachlanevenson/k8s-kubectl:latest
              command:
                - /bin/sh
                - -c
                - kubectl -n {{ .Values.namespace | default .Release.Namespace }} rollout restart deploy/{{ include "name" . }}
          restartPolicy: OnFailure


{{ end }}
