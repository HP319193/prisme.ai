{{ if .Values.global.repository.create }}

apiVersion: v1
data:
  .dockerconfigjson: '{{ template "imagePullSecret" . }}'
kind: Secret
metadata:
  name: '{{ template "imagePullSecretName" . }}'
type: kubernetes.io/dockerconfigjson

{{ end }}

---

{{- range $secret := .Values.generateSecrets }}

{{ $namespace := ($secret.namespace | default $.Release.Namespace) }}

---

apiVersion: v1
kind: Secret
type: '{{ $secret.type | default "Opaque" }}'
metadata:
  name: '{{ $secret.name }}'
  namespace: {{ $namespace }}
  annotations:
    "helm.sh/resource-policy": "keep"

data:
  {{- range $key, $value := $secret.data }} # Loop over each secret's field

    {{- if kindIs "map" $value }} # If we need to generate this secret

      # Fetch existing generated value
      {{- $existingSecret := (lookup "v1" "Secret" $namespace $secret.name) | default (dict "data" dict) }}

      {{- if (get $existingSecret.data $key) }} # We already generated a value : keep it

  {{ $key }}: {{ (get $existingSecret.data $key) }}

      {{- else }} # First time we generate a value

        {{ $generatedValue := (randAlphaNum ($value.length | default 32) | b64enc) }}

  {{ $key }}: {{ $generatedValue | quote }}

      {{- end }} # End of existing value condition

    {{ else }} # Static value

  {{ $key }}: {{ $value | b64enc | quote }}

    {{- end }} # End of condition (generated vs static field)

  {{- end }} # End of fields loop

{{- end }} # End of secrets loop
