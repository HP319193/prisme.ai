apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "name" . }}
  labels:
    {{- include "labels" . | nindent 4 }}
  namespace: {{ .Values.namespace | default .Release.Namespace }}

spec:
  {{ if not .Values.hpa.create }}
  replicas: {{ .Values.replicaCount }}
  {{ end }}
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate

  template:
    metadata:
      annotations:
        kiali.io/runtimes: nodejs
      labels:
        {{- include "selectorLabels" . | nindent 8 }}
        version: {{ .Values.image.tag | default .Chart.AppVersion | quote }}
    spec:
      imagePullSecrets:
        - name: {{ include "imagePullSecretName" . }}
      restartPolicy: {{ .Values.image.pullPolicy }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}

      serviceAccountName: {{ include "serviceAccountName" . }}

      volumes:
        - name: gateway-config
          configMap:
            name: {{ include "name" . }}-config

        {{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent 8 }}
        {{- end }}

      containers:
        - name: {{ include "name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - containerPort: {{ .Values.service.port }}
            name: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /sys/healthcheck
              port: http
            failureThreshold: 2
            initialDelaySeconds: 120

          readinessProbe:
            httpGet:
              path: /sys/healthcheck
              port: http
              scheme: HTTP
            failureThreshold: 1
            initialDelaySeconds: 1
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1

          volumeMounts:
            - name: gateway-config
              mountPath: /gateway.config.yml
              subPath: gateway.config.yml

        {{- if .Values.volumeMounts }}
{{ toYaml .Values.volumeMounts | indent 12 }}
        {{- end }}

          env:
            - name: PORT
              value: '{{ .Values.service.port }}'

            # Public urls
            - name: API_URL
              value: {{ .Values.global.apiUrl }}
            - name: CONSOLE_URL
              value: {{ .Values.global.consoleUrl }}
            - name: PAGES_HOST
              {{ if .Values.pagesHost }}
              value: {{ printf "https://%s%s" .Values.pagesHost "/pages" }}
              {{ else if .Values.global.pagesHost }}
              value: {{ .Values.global.pagesHost }}
              {{ else }}
              value: {{ printf "https://%s%s" (.Values.pagesHost | default (first .Values.virtualService.hosts) | default (first .Values.ingressRoute.hosts) | default .Values.ingressRoute.host) "/pages" }}
              {{ end }}

            # OIDC
            - name: OIDC_CLIENT_REGISTRATION_TOKEN
              {{- if kindIs "map" .Values.global.oidc.clientRegistrationToken }}
              {{- toYaml .Values.global.oidc.clientRegistrationToken | nindent 14 }}
              {{ else }}
              value: {{ .Values.global.oidc.clientRegistrationToken }}
              {{- end }}
            - name: OIDC_STUDIO_CLIENT_ID
              {{- if kindIs "map" .Values.global.oidc.studioClientId }}
              {{- toYaml .Values.global.oidc.studioClientId | nindent 14 }}
              {{ else }}
              value: {{ .Values.global.oidc.studioClientId }}
              {{- end }}
            - name: OIDC_STUDIO_CLIENT_SECRET
              {{- if kindIs "map" .Values.global.oidc.studioClientSecret }}
              {{- toYaml .Values.global.oidc.studioClientSecret | nindent 14 }}
              {{ else }}
              value: {{ .Values.global.oidc.studioClientSecret }}
              {{- end }}
            - name: SESSION_COOKIES_SIGN_SECRET
              {{- if kindIs "map" .Values.global.oidc.cookiesSignSecret }}
              {{- toYaml .Values.global.oidc.cookiesSignSecret | nindent 14 }}
              {{ else }}
              value: {{ .Values.global.oidc.cookiesSignSecret }}
              {{- end }}

            - name: APP_NAME
              value: {{ include "name" . }}
            - name: NODE_ENV
              value: {{ .Values.nodeEnv | default "production" }}
            - name: GATEWAY_CONFIG_PATH
              value: {{ .Values.config.path | default "/gateway.config.yml" }}
            - name: SUPER_ADMIN_EMAILS
              value: {{ .Values.config.admins | default "" }}

            # Internal URLS for redirection
            - name: WORKSPACES_API_URL
              value: {{ .Values.config.services.workspaces.url | default (printf "http://%s-%s" .Release.Name "prismeai-workspaces") }}
            - name: RUNTIME_API_URL
              value: {{ .Values.config.services.runtime.url | default (printf "http://%s-%s" .Release.Name "prismeai-runtime") }}
            - name: EVENTS_API_URL
              value: {{ .Values.config.services.events.url | default (printf "http://%s-%s" .Release.Name "prismeai-events") }}
            - name: CONSOLE_API_URL
              value: {{ .Values.config.services.console.url | default (printf "http://%s-%s" .Release.Name "prismeai-console") }}

            # Apps
            - name: FUNCTIONS_API_URL
              value: {{ .Values.config.services.functions.url }}

            - name: OPENAPI_FILEPATH
              value: /www/specifications/swagger.yml

            - name: BROKER_DRIVER
              value: {{ .Values.global.broker.driver }}
            - name: BROKER_HOST
              value: {{ .Values.global.broker.url }}
            - name: BROKER_PASSWORD
              value: {{ .Values.global.broker.password }}
            - name: BROKER_NAMESPACE
              value: {{ .Values.global.broker.namespace }}

            - name: USERS_STORAGE_HOST
              value: {{ .Values.storage.users.url }}

            - name: SESSIONS_STORAGE_HOST
              value: {{ .Values.storage.sessions.url }}
            - name: SESSIONS_STORAGE_PASSWORD
              value: {{ .Values.storage.sessions.password }}

            - name: PERMISSIONS_STORAGE_HOST
              value: {{ .Values.storage.permissions.url | default .Values.global.storage.permissions.url }}

            - name: INTERNAL_API_KEY
              {{- if kindIs "map" .Values.global.internalApiKey }}
              {{- toYaml .Values.global.internalApiKey | nindent 14 }}
              {{ else }}
              value: {{ .Values.global.internalApiKey }}
              {{- end }}

            - name: MAILGUN_API_KEY
              value: '{{ .Values.providers.mailgun.apiKey }}'

            - name: CONSOLE_URL
              value: '{{ .Values.global.consoleUrl }}'

            - name: RESET_PASSWORD_URL
              value: '{{ default (printf "%s/forgot" .Values.global.consoleUrl) }}'

            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

{{ if .Values.hpa.create }}

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "name" . }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "name" . }}
  minReplicas: {{ .Values.hpa.minReplicas }}
  maxReplicas:  {{ .Values.hpa.maxReplicas }}
  metrics:
    {{- toYaml .Values.hpa.metrics | nindent 4 }}

{{ end }}

{{ if .Values.autorestart.enabled }}

---

apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "name" . }}-autorestart
  namespace: core
spec:
  schedule: {{ .Values.autorestart.schedule }}
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: autorestart-sa
          containers:
            - name: autorestart
              image: lachlanevenson/k8s-kubectl:latest
              command:
                - /bin/sh
                - -c
                - kubectl -n {{ .Values.namespace | default .Release.Namespace }} rollout restart deploy/{{ include "name" . }}
          restartPolicy: OnFailure


{{ end }}
